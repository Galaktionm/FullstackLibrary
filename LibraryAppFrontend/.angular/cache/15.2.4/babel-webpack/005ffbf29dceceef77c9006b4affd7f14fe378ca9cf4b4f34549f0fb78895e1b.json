{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { URLGlobal } from 'src/app/URLGlobal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AddbookComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const authorname_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(authorname_r1);\n  }\n}\nexport class AddbookComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  ngOnInit() {\n    this.finalAuthors = new Set();\n    this.resultAuthorIds = new Set();\n    this.addBookForm = new FormGroup({\n      title: new FormControl(''),\n      description: new FormControl(''),\n      authors: new FormControl(''),\n      available: new FormControl('')\n    });\n    this.addBookForm.get(\"authors\")?.valueChanges.subscribe(query => {\n      var params = new HttpParams().set(\"query\", query);\n      this.httpClient.get(URLGlobal.libraryAppURL + \"api/author/search\", {\n        params\n      }).subscribe({\n        next: value => {\n          console.log(value);\n          document.getElementById(\"authorsdiv\")?.remove();\n          var authorsdiv = document.createElement(\"div\");\n          authorsdiv.setAttribute(\"id\", \"authorsdiv\");\n          document.getElementById(\"addbookformdiv\")?.append(authorsdiv);\n          this.currentAuthors = value.data;\n          for (let i = 0; i < this.currentAuthors.length; i++) {\n            var singleresultDiv = document.createElement(\"button\");\n            singleresultDiv.style.margin = \"0.5em\";\n            singleresultDiv.style.border = \"solid black\";\n            singleresultDiv.setAttribute(\"data-id\", this.currentAuthors[i].authorId.toString());\n            singleresultDiv.setAttribute(\"data-name\", this.currentAuthors[i].name);\n            singleresultDiv.addEventListener(\"click\", event => {\n              this.finalAuthors.add(event.target.dataset[\"name\"]);\n              this.resultAuthorIds.add(Number.parseInt(event.target.dataset[\"id\"]));\n            });\n            singleresultDiv.append(document.createElement(\"p\").innerHTML = this.currentAuthors[i].name);\n            authorsdiv.append(singleresultDiv);\n          }\n        },\n        error: error => {\n          document.getElementById(\"authorsdiv\")?.remove();\n        }\n      });\n    });\n  }\n  removeAuthor(event) {\n    var element = event.target;\n    this.finalAuthors.delete(element.dataset[\"name\"]);\n    this.resultAuthorIds.delete(Number.parseInt(element.dataset[\"id\"]));\n    element.remove();\n  }\n  addBook() {\n    var finalData = [];\n    this.resultAuthorIds.forEach(e => {\n      finalData.push(e);\n    });\n    var addBookRequest = {};\n    {\n      addBookRequest.title = this.addBookForm.controls[\"title\"].value, addBookRequest.description = this.addBookForm.controls[\"description\"].value, addBookRequest.authorIds = finalData;\n      addBookRequest.available = this.addBookForm.controls[\"available\"].value;\n      console.log(\"Sending this: \" + addBookRequest);\n      this.httpClient.post(URLGlobal.libraryAppURL + \"api/book/add\", addBookRequest).subscribe({\n        next: result => {\n          console.log(result);\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n  }\n}\nAddbookComponent.ɵfac = function AddbookComponent_Factory(t) {\n  return new (t || AddbookComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAddbookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddbookComponent,\n  selectors: [[\"app-addbook\"]],\n  decls: 30,\n  vars: 2,\n  consts: [[1, \"addbookgrid\"], [1, \"addbookforminfo\"], [\"id\", \"addbookformdiv\", 1, \"addbookformdiv\"], [1, \"addbookform\", 3, \"formGroup\"], [1, \"formview\"], [\"for\", \"title\"], [\"type\", \"text\", \"formControlName\", \"title\", \"id\", \"title\"], [\"for\", \"description\"], [\"type\", \"text\", \"formControlName\", \"description\", \"id\", \"description\"], [\"for\", \"authors\"], [1, \"selectedAuthors\"], [\"onclick\", \"removeAuthor($event)\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"authors\", \"id\", \"authors\"], [\"for\", \"available\"], [\"type\", \"number\", \"formControlName\", \"available\", \"id\", \"available\"], [\"type\", \"submit\", 3, \"click\"], [\"onclick\", \"removeAuthor($event)\"]],\n  template: function AddbookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\n      i0.ɵɵtext(3, \"Add a book to the library's database. Users will be able to view it's information, and add reviews. \");\n      i0.ɵɵelement(4, \"br\")(5, \"br\");\n      i0.ɵɵtext(6, \" Adding an author does not have to be a hassle! Just search for any author by name, select from the search results on the right, and it's over! \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"form\", 3)(9, \"div\", 4)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"textarea\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"label\", 9);\n      i0.ɵɵtext(19, \"Authors:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 10);\n      i0.ɵɵtemplate(21, AddbookComponent_button_21_Template, 2, 1, \"button\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 13);\n      i0.ɵɵtext(25, \"Available: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 4)(28, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function AddbookComponent_Template_button_click_28_listener() {\n        return ctx.addBook();\n      });\n      i0.ɵɵtext(29, \"Add\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.addBookForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.finalAuthors);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n.addbookgrid {\\n    display: grid;\\n    grid-template-rows: 1fr 4fr;\\n    margin: 0.5em 1.5em;\\n    padding: 0;\\n}\\n\\n.addbookforminfo {\\n    display: flex;\\n    background-color: rgb(10, 5, 79);\\n    padding: 0;\\n    color: white;\\n    font-size: 1.5em;\\n    font-weight: 600;\\n    padding: 0.4em;\\n}\\n\\n\\n.addbookformdiv {\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    grid-template-rows: 1fr;\\n}\\n\\n.addbookform {\\n    margin: 0.2em;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.formview {\\n    margin: 1em;\\n}\\n\\n.formview > label, input, textarea {\\n    display: block;\\n    font-size: 2.5em;\\n}\\n\\n.selectedAuthors {\\n    display: flex;\\n    flex-direction: row;\\n    margin: 0.3em 0;\\n}\\n\\n.selectedAuthors > button {\\n    border: none !important;\\n    border-radius: 0.5em;\\n    background-color: rgb(110, 20, 220);\\n    color: white;\\n    font-size: 1.5em;\\n    padding: 0.4em;\\n}\\n\\n.selectedAuthors > button + button {\\n    margin-left: 0.2em;\\n}\\n\\n#authorsdiv {\\n    border: solid rgb(110, 20, 220);\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#authorsdiv > button {\\n    display: block;\\n    max-height: 5em;\\n    flex: 1;\\n    border: none !important;\\n    outline: none;\\n    background-color: rgb(110, 20, 220);\\n    color: white;\\n    font-weight: 800;\\n    font-size: 2em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZnVuY3Rpb25hbGl0eS9hZGRib29rL2FkZGJvb2suY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLG1CQUFtQjtJQUNuQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZ0NBQWdDO0lBQ2hDLFVBQVU7SUFDVixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixjQUFjO0FBQ2xCOzs7QUFHQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLG9CQUFvQjtJQUNwQixtQ0FBbUM7SUFDbkMsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksK0JBQStCO0lBQy9CLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLE9BQU87SUFDUCx1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLG1DQUFtQztJQUNuQyxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5hZGRib29rZ3JpZCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA0ZnI7XG4gICAgbWFyZ2luOiAwLjVlbSAxLjVlbTtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4uYWRkYm9va2Zvcm1pbmZvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMCwgNSwgNzkpO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBwYWRkaW5nOiAwLjRlbTtcbn1cblxuXG4uYWRkYm9va2Zvcm1kaXYge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyO1xufVxuXG4uYWRkYm9va2Zvcm0ge1xuICAgIG1hcmdpbjogMC4yZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uZm9ybXZpZXcge1xuICAgIG1hcmdpbjogMWVtO1xufVxuXG4uZm9ybXZpZXcgPiBsYWJlbCwgaW5wdXQsIHRleHRhcmVhIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDIuNWVtO1xufVxuXG4uc2VsZWN0ZWRBdXRob3JzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgbWFyZ2luOiAwLjNlbSAwO1xufVxuXG4uc2VsZWN0ZWRBdXRob3JzID4gYnV0dG9uIHtcbiAgICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiAwLjVlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTEwLCAyMCwgMjIwKTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICBwYWRkaW5nOiAwLjRlbTtcbn1cblxuLnNlbGVjdGVkQXV0aG9ycyA+IGJ1dHRvbiArIGJ1dHRvbiB7XG4gICAgbWFyZ2luLWxlZnQ6IDAuMmVtO1xufVxuXG4jYXV0aG9yc2RpdiB7XG4gICAgYm9yZGVyOiBzb2xpZCByZ2IoMTEwLCAyMCwgMjIwKTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbiNhdXRob3JzZGl2ID4gYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXgtaGVpZ2h0OiA1ZW07XG4gICAgZmxleDogMTtcbiAgICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTAsIDIwLCAyMjApO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXdlaWdodDogODAwO1xuICAgIGZvbnQtc2l6ZTogMmVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["HttpParams","FormControl","FormGroup","URLGlobal","i0","AddbookComponent","constructor","httpClient","ngOnInit","finalAuthors","Set","resultAuthorIds","addBookForm","title","description","authors","available","get","valueChanges","subscribe","query","params","set","libraryAppURL","next","value","console","log","document","getElementById","remove","authorsdiv","createElement","setAttribute","append","currentAuthors","data","i","length","singleresultDiv","style","margin","border","authorId","toString","name","addEventListener","event","add","target","dataset","Number","parseInt","innerHTML","error","removeAuthor","element","delete","addBook","finalData","forEach","e","push","addBookRequest","controls","authorIds","post","result","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/galaktion/Desktop/LibraryAppFrontend/src/app/functionality/addbook/addbook.component.ts","/home/galaktion/Desktop/LibraryAppFrontend/src/app/functionality/addbook/addbook.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { URLGlobal } from 'src/app/URLGlobal';\nimport { AuthorApiResult } from '../ApiResult';\nimport { AddBookRequest, Author } from '../models';\n\n@Component({\n  selector: 'app-addbook',\n  templateUrl: './addbook.component.html',\n  styleUrls: ['./addbook.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AddbookComponent implements OnInit {\n\n  addBookForm!: FormGroup\n  currentAuthors!: Author[]\n  finalAuthors!: Set<string>;\n  resultAuthorIds!: Set<number>;\n\n  constructor(private httpClient:HttpClient) {}\n\n\n  ngOnInit(): void {\n    this.finalAuthors=new Set<string>();\n    this.resultAuthorIds=new Set<number>();\n    this.addBookForm=new FormGroup({\n      title: new FormControl(''),\n      description: new FormControl(''),\n      authors: new FormControl(''),\n      available: new FormControl('')\n    });\n\n    this.addBookForm.get(\"authors\")?.valueChanges.subscribe(\n      (query)=>{\n        var params=new HttpParams().set(\"query\", query);\n        this.httpClient.get<AuthorApiResult>(URLGlobal.libraryAppURL+\"api/author/search\", { params })\n        .subscribe({\n          next: (value)=>{\n            console.log(value);\n\n            document.getElementById(\"authorsdiv\")?.remove();\n\n            var authorsdiv=document.createElement(\"div\");\n            authorsdiv.setAttribute(\"id\", \"authorsdiv\");\n            document.getElementById(\"addbookformdiv\")?.append(authorsdiv);\n\n            this.currentAuthors=value.data;\n            for(let i=0; i<this.currentAuthors.length; i++){\n              var singleresultDiv=document.createElement(\"button\");\n              singleresultDiv.style.margin=\"0.5em\";\n              singleresultDiv.style.border=\"solid black\";\n              singleresultDiv.setAttribute(\"data-id\", this.currentAuthors[i].authorId.toString());\n              singleresultDiv.setAttribute(\"data-name\", this.currentAuthors[i].name);\n              singleresultDiv.addEventListener(\"click\", (event)=>{\n                this.finalAuthors.add((<HTMLButtonElement>event.target!).dataset[\"name\"]!);\n                this.resultAuthorIds.add(Number.parseInt((<HTMLButtonElement>event.target!).dataset[\"id\"]!));\n              })\n              \n              singleresultDiv.append(document.createElement(\"p\").innerHTML=this.currentAuthors[i].name);\n              authorsdiv!.append(singleresultDiv);\n            }\n          },\n          error: (error)=>{\n            document.getElementById(\"authorsdiv\")?.remove();\n          }\n      })});\n  }\n\n  removeAuthor(event:Event){\n    var element=<HTMLButtonElement>event.target!\n    this.finalAuthors.delete(element.dataset[\"name\"]!);\n    this.resultAuthorIds.delete(Number.parseInt(element.dataset[\"id\"]!));\n    element.remove();\n  }\n\n  addBook(){\n    var finalData=<number[]>[];\n    this.resultAuthorIds.forEach((e)=>{\n      finalData.push(e);\n    })\n\n    var addBookRequest=<AddBookRequest>{};{\n    addBookRequest.title=this.addBookForm.controls[\"title\"].value,\n    addBookRequest.description=this.addBookForm.controls[\"description\"].value,\n    addBookRequest.authorIds=finalData;\n    addBookRequest.available=this.addBookForm.controls[\"available\"].value\n\n    console.log(\"Sending this: \"+addBookRequest);\n\n    this.httpClient.post(URLGlobal.libraryAppURL+\"api/book/add\", addBookRequest).subscribe({\n      next: (result)=>{\n        console.log(result);\n      }, \n      error: (error)=>{\n        console.log(error);\n      }\n    })\n\n    }\n  }\n}\n\n","<div class=\"addbookgrid\">\n\n    <div class=\"addbookforminfo\">\n        <p>Add a book to the library's database. Users will be able to view it's information, and add reviews.\n            <br><br>\n        Adding an author does not have to be a hassle! Just search for any author by name, \n            select from the search results on the right, and it's over!\n    </div>\n\n<div class=\"addbookformdiv\" id=\"addbookformdiv\">\n<form [formGroup]=\"addBookForm\" class=\"addbookform\">\n\n  <div class=\"formview\">\n    <label for=\"title\">Title:</label>\n    <input type=\"text\" formControlName=\"title\" id=\"title\"/>\n  </div>\n\n  <div class=\"formview\">\n    <label for=\"description\">Description:</label>\n    <textarea type=\"text\" formControlName=\"description\" id=\"description\"></textarea>\n  </div>\n\n  <div class=\"formview\">\n    <label for=\"authors\">Authors:</label>\n    <div class=\"selectedAuthors\">\n        <button *ngFor=\"let authorname of finalAuthors\" onclick=\"removeAuthor($event)\">{{authorname}}</button>\n    </div>\n    <input type=\"text\" formControlName=\"authors\" id=\"authors\">\n  </div>\n\n  <div class=\"formview\">\n    <label for=\"available\">Available: </label>\n    <input type=\"number\" formControlName=\"available\" id=\"available\">\n  </div>\n  <div class=\"formview\">\n    <button type=\"submit\" (click)=\"addBook()\">Add</button>\n  </div>\n</form>\n\n</div>\n\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}