{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { URLGlobal } from 'src/app/URLGlobal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction NavbarComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const book_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r2.title);\n  }\n}\nfunction NavbarComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NavbarComponent_div_3_div_1_Template, 3, 1, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.searchResult.data);\n  }\n}\nexport class NavbarComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  ngOnInit() {\n    this.searchForm = new FormGroup({\n      title: new FormControl('')\n    });\n    this.searchForm.get(\"title\")?.valueChanges.subscribe(query => {\n      var params = new HttpParams().set(\"query\", query);\n      this.httpClient.get(URLGlobal.libraryAppURL + \"api/book/search\", {\n        params\n      }).subscribe({\n        next: value => {\n          this.searchResult = value;\n          console.log(value);\n        }\n      });\n    });\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"title\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵelement(2, \"input\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, NavbarComponent_div_3_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.searchForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.searchResult);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAEvD,SAASC,SAAS,QAAQ,mBAAmB;;;;;;;ICGrCC,2BAA4C;IACrCA,YAAc;IAAAA,iBAAI;;;;IAAlBA,eAAc;IAAdA,mCAAc;;;;;IAFzBA,2BAA0B;IACtBA,sEAEM;IACVA,iBAAM;;;;IAHoBA,eAAoB;IAApBA,kDAAoB;;;ADIlD,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAe;EAE7CC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAC,IAAIP,SAAS,CAAC;MAC5BQ,KAAK,EAAE,IAAIT,WAAW,CAAC,EAAE;KAC1B,CAAC;IACF,IAAI,CAACQ,UAAU,CAACE,GAAG,CAAC,OAAO,CAAC,EAAEC,YAAY,CAACC,SAAS,CACjDC,KAAK,IAAG;MACP,IAAIC,MAAM,GAAC,IAAIf,UAAU,EAAE,CAACgB,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;MAC/C,IAAI,CAACP,UAAU,CAACI,GAAG,CAAYR,SAAS,CAACc,aAAa,GAAC,iBAAiB,EAAE;QAAEF;MAAM,CAAE,CAAC,CACpFF,SAAS,CAAC;QACTK,IAAI,EAAGC,KAAK,IAAG;UACb,IAAI,CAACC,YAAY,GAACD,KAAK;UACvBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;QACpB;OACD,CAAC;IAAA,CAAC,CAAC;EACV;;AArBWd,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BvB,2BAAK;MAGGA,2BAA2C;MAC/CA,iBAAO;MAEPA,gEAIM;MAGVA,iBAAM;;;MAXIA,eAAwB;MAAxBA,0CAAwB;MAIxBA,eAAkB;MAAlBA,uCAAkB","names":["HttpParams","FormControl","FormGroup","URLGlobal","i0","NavbarComponent","constructor","httpClient","ngOnInit","searchForm","title","get","valueChanges","subscribe","query","params","set","libraryAppURL","next","value","searchResult","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/galaktion/Desktop/LibraryAppFrontend/src/app/core/navbar/navbar.component.ts","/home/galaktion/Desktop/LibraryAppFrontend/src/app/core/navbar/navbar.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ApiResult } from 'src/app/functionality/ApiResult';\nimport { URLGlobal } from 'src/app/URLGlobal';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  \n  searchForm!: FormGroup\n  searchResult!: ApiResult\n\n  constructor(private httpClient: HttpClient) {}\n  \n  ngOnInit(): void {\n    this.searchForm=new FormGroup({\n      title: new FormControl('')\n    });\n    this.searchForm.get(\"title\")?.valueChanges.subscribe(\n      (query)=>{\n        var params=new HttpParams().set(\"query\", query);\n        this.httpClient.get<ApiResult>(URLGlobal.libraryAppURL+\"api/book/search\", { params })\n        .subscribe({\n          next: (value)=>{\n            this.searchResult=value;\n            console.log(value);\n          }\n        })});\n  }\n\n  \n}\n","<div>\n\n    <form [formGroup]=\"searchForm\">\n        <input type=\"text\" formControlName=\"title\">\n    </form>\n\n    <div *ngIf=\"searchResult\">\n        <div *ngFor=\"let book of searchResult.data\">\n            <p>{{book.title}}</p>\n        </div>\n    </div>\n\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}