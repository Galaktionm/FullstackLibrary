{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { URLGlobal } from 'src/app/URLGlobal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class TestComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.imageForm = new FormGroup({\n      imagedata: new FormControl('')\n    });\n  }\n  /*\n    onFileSelected(event: Event){\n      if(event.target!=null) {\n        var x=event.target as HTMLInputElement;\n        if(x.files!=null){\n          var file=x.files[0];\n  \n          console.log(\"Uploading file: \"+file);\n      const formData=new FormData();\n      formData.append(\"file\", file);\n      this.http.post(URLGlobal.libraryAppURL+\"api/book/upload\", formData).subscribe({\n        next: (result)=>{\n          console.log(result);\n        },\n        error: (errorMessage)=>{\n          console.log(errorMessage);\n        }\n      });\n        }\n      }\n    }\n  */\n  uploadImage() {\n    var element = document.getElementById(\"fileuploadinput\");\n    if (element.files != null) {\n      var file = element.files[0];\n      console.log(\"Uploading file: \" + file);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      this.http.post(URLGlobal.libraryAppURL + \"api/book/upload\", formData).subscribe({\n        next: result => {\n          console.log(result);\n        },\n        error: errorMessage => {\n          console.log(errorMessage);\n        }\n      });\n    }\n  }\n}\nTestComponent.ɵfac = function TestComponent_Factory(t) {\n  return new (t || TestComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nTestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TestComponent,\n  selectors: [[\"app-test\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[3, \"submit\"], [\"type\", \"file\", \"id\", \"fileuploadinput\"], [\"type\", \"submit\", \"value\", \"Upload\"]],\n  template: function TestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function TestComponent_Template_form_submit_0_listener() {\n        return ctx.uploadImage();\n      });\n      i0.ɵɵelement(1, \"input\", 1)(2, \"input\", 2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AACvD,SAASC,SAAS,QAAQ,mBAAmB;;;;AAO7C,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAc;EAEtCC,QAAQ;IACL,IAAI,CAACC,SAAS,GAAC,IAAIN,SAAS,CAAC;MAC3BO,SAAS,EAAE,IAAIR,WAAW,CAAC,EAAE;KAC/B,CAAC;EACJ;EAEF;;;;;;;;;;;;;;;;;;;;;;EAuBES,WAAW;IACT,IAAIC,OAAO,GAAmBC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;IACxE,IAAGF,OAAO,CAACG,KAAK,IAAE,IAAI,EAAC;MACrB,IAAIC,IAAI,GAACJ,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC;MAEzBE,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAACF,IAAI,CAAC;MACtC,MAAMG,QAAQ,GAAC,IAAIC,QAAQ,EAAE;MAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;MAC7B,IAAI,CAACT,IAAI,CAACe,IAAI,CAAClB,SAAS,CAACmB,aAAa,GAAC,iBAAiB,EAAEJ,QAAQ,CAAC,CAACK,SAAS,CAAC;QAC5EC,IAAI,EAAGC,MAAM,IAAG;UACdT,OAAO,CAACC,GAAG,CAACQ,MAAM,CAAC;QACrB,CAAC;QACDC,KAAK,EAAGC,YAAY,IAAG;UACrBX,OAAO,CAACC,GAAG,CAACU,YAAY,CAAC;QAC3B;OACD,CAAC;;EAIJ;;AAtDWvB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1BC,+BAA+B;MAAzBA;QAAA,OAAUC,iBAAa;MAAA,EAAC;MAE1BD,2BAAwC;MAG5CA,iBAAO","names":["FormControl","FormGroup","URLGlobal","TestComponent","constructor","http","ngOnInit","imageForm","imagedata","uploadImage","element","document","getElementById","files","file","console","log","formData","FormData","append","post","libraryAppURL","subscribe","next","result","error","errorMessage","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/galaktion/Desktop/LibraryAppFrontend/src/app/core/test/test.component.ts","/home/galaktion/Desktop/LibraryAppFrontend/src/app/core/test/test.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { URLGlobal } from 'src/app/URLGlobal';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  imageForm!:FormGroup\n\n  constructor(private http:HttpClient) {}\n\n  ngOnInit(): void {\n     this.imageForm=new FormGroup({\n       imagedata: new FormControl('')\n    });\n  }\n\n/*\n  onFileSelected(event: Event){\n    if(event.target!=null) {\n      var x=event.target as HTMLInputElement;\n      if(x.files!=null){\n        var file=x.files[0];\n\n        console.log(\"Uploading file: \"+file);\n    const formData=new FormData();\n    formData.append(\"file\", file);\n    this.http.post(URLGlobal.libraryAppURL+\"api/book/upload\", formData).subscribe({\n      next: (result)=>{\n        console.log(result);\n      },\n      error: (errorMessage)=>{\n        console.log(errorMessage);\n      }\n    });\n      }\n    }\n  }\n*/\n\n  uploadImage(){\n    var element=<HTMLInputElement>document.getElementById(\"fileuploadinput\");\n    if(element.files!=null){\n      var file=element.files[0];\n\n      console.log(\"Uploading file: \"+file);\n    const formData=new FormData();\n    formData.append(\"file\", file);\n    this.http.post(URLGlobal.libraryAppURL+\"api/book/upload\", formData).subscribe({\n      next: (result)=>{\n        console.log(result);\n      },\n      error: (errorMessage)=>{\n        console.log(errorMessage);\n      }\n    });\n    }\n   \n\n  }\n\n}\n","<form (submit)=\"uploadImage()\">\n\n    <input type=\"file\" id=\"fileuploadinput\">\n\n    <input type=\"submit\" value=\"Upload\">\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}