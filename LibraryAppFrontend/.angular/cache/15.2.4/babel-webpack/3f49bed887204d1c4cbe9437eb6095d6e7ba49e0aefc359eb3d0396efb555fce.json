{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../AuthService\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    var loginRequest = {};\n    loginRequest.email = this.loginForm.controls['email'].value;\n    loginRequest.password = this.loginForm.controls['password'].value;\n    this.authService.login(loginRequest).subscribe({\n      next: result => {\n        console.log(result);\n        if (result.success && result.token) {\n          this.authService.setUserCredentials(result);\n        }\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"id\", \"email\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"name\", \"password\", \"id\", \"password\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Please enter your email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Please enter your password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵtext(8, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;AASnE,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;EAAc;EAE7CC,QAAQ;IACL,IAAI,CAACC,SAAS,GAAC,IAAIN,SAAS,CAAC;MAC5BO,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,KAAK,CAAC;MAC5CC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ;KAEjD,CAAC;EACL;EAEAC,QAAQ;IACN,IAAIC,YAAY,GAAe,EAAE;IACjCA,YAAY,CAACJ,KAAK,GAAG,IAAI,CAACD,SAAS,CAACM,QAAQ,CAAC,OAAO,CAAC,CAACC,KAAK;IAC3DF,YAAY,CAACH,QAAQ,GAAG,IAAI,CAACF,SAAS,CAACM,QAAQ,CAAC,UAAU,CAAC,CAACC,KAAK;IAEjE,IAAI,CAACT,WAAW,CAACU,KAAK,CAACH,YAAY,CAAC,CAACI,SAAS,CAAC;MAC7CC,IAAI,EAAGC,MAAM,IAAG;QACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnB,IAAGA,MAAM,CAACG,OAAO,IAAIH,MAAM,CAACI,KAAK,EAAE;UACnC,IAAI,CAACjB,WAAW,CAACkB,kBAAkB,CAACL,MAAM,CAAC;;MAE7C,CAAC;MAEDM,KAAK,EAAGA,KAAK,IAAG;QACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MACpB;KACD,CAAC;EACJ;;AA/BWrB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,+BAAsD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAEjDD,gCAAmB;MAAAA,wCAAwB;MAAAA,iBAAQ;MACnDA,2BAAoE;MAEpEA,gCAAsB;MAAAA,2CAA2B;MAAAA,iBAAQ;MACzDA,2BAAgF;MAEhFA,iCAAsB;MAAAA,qBAAK;MAAAA,iBAAS;;;MARlCA,yCAAuB","names":["FormControl","FormGroup","Validators","LoginComponent","constructor","authService","ngOnInit","loginForm","email","password","required","onSubmit","loginRequest","controls","value","login","subscribe","next","result","console","log","success","token","setUserCredentials","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/galaktion/Desktop/LibraryAppFrontend/src/app/authorization/login/login.component.ts","/home/galaktion/Desktop/LibraryAppFrontend/src/app/authorization/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../AuthService';\nimport { LoginRequest } from './logindto';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm!:FormGroup\n  \n  constructor(private authService:AuthService){}\n  \n  ngOnInit(): void {\n     this.loginForm=new FormGroup({\n      email: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.required)\n\n     })\n  }\n\n  onSubmit() {\n    var loginRequest=<LoginRequest>{};\n    loginRequest.email = this.loginForm.controls['email'].value;\n    loginRequest.password = this.loginForm.controls['password'].value;\n\n    this.authService.login(loginRequest).subscribe({\n      next: (result)=>{\n        console.log(result);\n        if(result.success && result.token) {\n        this.authService.setUserCredentials(result);\n        }\n      },\n\n      error: (error)=>{\n        console.log(error);\n      }\n    });\n  }\n\n  \n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\n    <label for=\"email\">Please enter your email:</label>\n    <input type=\"email\" formControlName=\"email\" name=\"email\" id=\"email\">\n\n    <label for=\"password\">Please enter your password:</label>\n    <input type=\"password\" formControlName=\"password\" name=\"password\" id=\"password\">\n\n    <button type=\"submit\">Login</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}