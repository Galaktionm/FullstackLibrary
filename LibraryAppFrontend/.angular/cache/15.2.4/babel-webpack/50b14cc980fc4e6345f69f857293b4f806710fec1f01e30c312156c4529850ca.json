{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { URLGlobal } from 'src/app/URLGlobal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  ngOnInit() {\n    var params = new HttpParams().set(\"userId\", sessionStorage.getItem(\"userId\"));\n    this.httpClient.get(URLGlobal.libraryAppURL + \"api/authorization/account\", {\n      params\n    }).subscribe({\n      next: result => {\n        console.log(result);\n        this.user = result;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n}\nAccountComponent.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountComponent,\n  selectors: [[\"app-account\"]],\n  decls: 2,\n  vars: 0,\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"account works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAG7D,SAASC,SAAS,QAAQ,mBAAmB;;;AAO7C,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAe;EAE7CC,QAAQ;IACN,IAAIC,MAAM,GAAC,IAAIN,UAAU,EAAE,CAACO,GAAG,CAAC,QAAQ,EAAEC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3E,IAAI,CAACL,UAAU,CAACM,GAAG,CAAOT,SAAS,CAACU,aAAa,GAAC,2BAA2B,EAAE;MAAEL;IAAM,CAAE,CAAC,CAACM,SAAS,CAAC;MACnGC,IAAI,EAAGC,MAAM,IAAG;QACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnB,IAAI,CAACG,IAAI,GAACH,MAAM;MAClB,CAAC;MACDI,KAAK,EAAGA,KAAK,IAAG;QACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB;KACD,CAAC;EACJ;;AAjBWhB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAiB;EAAAC;EAAAC;EAAAC;IAAA;MCV7BC,yBAAG;MAAAA,8BAAc;MAAAA,iBAAI","names":["HttpParams","URLGlobal","AccountComponent","constructor","httpClient","ngOnInit","params","set","sessionStorage","getItem","get","libraryAppURL","subscribe","next","result","console","log","user","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/galaktion/Desktop/LibraryAppFrontend/src/app/authorization/account/account.component.ts","/home/galaktion/Desktop/LibraryAppFrontend/src/app/authorization/account/account.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/functionality/models';\nimport { URLGlobal } from 'src/app/URLGlobal';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  user!:User\n  \n  constructor(private httpClient: HttpClient) {}\n\n  ngOnInit(): void {\n    var params=new HttpParams().set(\"userId\", sessionStorage.getItem(\"userId\"));\n    this.httpClient.get<User>(URLGlobal.libraryAppURL+\"api/authorization/account\", { params }).subscribe({\n      next: (result)=>{\n        console.log(result);\n        this.user=result;\n      },\n      error: (error)=>{\n        console.log(error);\n      }\n    })\n  }\n\n}\n","<p>account works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}