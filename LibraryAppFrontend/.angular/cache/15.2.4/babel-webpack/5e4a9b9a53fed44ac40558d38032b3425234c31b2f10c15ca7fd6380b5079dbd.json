{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { URLGlobal } from 'src/app/URLGlobal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/authorization/AuthService\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"/login\"];\n};\nfunction NavbarComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nconst _c1 = function () {\n  return [\"/books\"];\n};\nfunction NavbarComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵtext(1, \"Books\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c1));\n  }\n}\nconst _c2 = function () {\n  return [\"/\"];\n};\nexport class NavbarComponent {\n  constructor(httpClient, authService) {\n    this.httpClient = httpClient;\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.isAuthenticated = this.authService.isAuthenticated();\n    this.searchForm = new FormGroup({\n      title: new FormControl('')\n    });\n    this.searchForm.get(\"title\")?.valueChanges.subscribe(query => {\n      var params = new HttpParams().set(\"query\", query);\n      this.httpClient.get(URLGlobal.libraryAppURL + \"api/book/search\", {\n        params\n      }).subscribe({\n        next: value => {\n          this.searchResult = value;\n          console.log(value);\n        }\n      });\n    });\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[1, \"navbar\"], [1, \"header\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-book-open-reader\"], [\"class\", \"loginbutton\", 3, \"routerLink\", 4, \"ngIf\"], [3, \"routerLink\", 4, \"ngIf\"], [1, \"loginbutton\", 3, \"routerLink\"], [3, \"routerLink\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1)(2, \"i\", 2);\n      i0.ɵɵtext(3, \" Dotnet Library\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(4, NavbarComponent_button_4_Template, 2, 2, \"button\", 3);\n      i0.ɵɵtemplate(5, NavbarComponent_button_5_Template, 2, 2, \"button\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c2));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isAuthenticated);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink],\n  styles: [\".navbar[_ngcontent-%COMP%] {\\n    display: flex;\\n    background-color: rgb(10, 5, 79);\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n    color: yellow;\\n    margin-left: 1em;\\n}\\n\\n.header[_ngcontent-%COMP%]:hover {\\n    cursor: pointer;\\n}\\n\\n\\n\\n.loginbutton[_ngcontent-%COMP%] {\\n    display: block;\\n    border: none !important;\\n    background-color: transparent;\\n    color: yellow;\\n    margin-left: auto;\\n    margin-right: 1em;\\n    font-size: 1.5em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksYUFBYTtJQUNiLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLGFBQWE7SUFDYixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COzs7O0FBSUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLDZCQUE2QjtJQUM3QixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5uYXZiYXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwLCA1LCA3OSk7XG59XG5cbi5oZWFkZXIge1xuICAgIGNvbG9yOiB5ZWxsb3c7XG4gICAgbWFyZ2luLWxlZnQ6IDFlbTtcbn1cblxuLmhlYWRlcjpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5cblxuLmxvZ2luYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogeWVsbG93O1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogMWVtO1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAGvD,SAASC,SAAS,QAAQ,mBAAmB;;;;;;;;;;;ICD7CC,iCAA+E;IAAAA,qBAAK;IAAAA,iBAAS;;;IAAxCA,uDAAyB;;;;;;;;IAE9EA,iCAA0D;IAAAA,qBAAK;IAAAA,iBAAS;;;IAAxCA,uDAAyB;;;;;;ADMzD,OAAM,MAAOC,eAAe;EAM1BC,YAAoBC,UAAsB,EAAUC,WAAuB;IAAvD,eAAU,GAAVD,UAAU;IAAsB,gBAAW,GAAXC,WAAW;EAAe;EAE9EC,QAAQ;IAEN,IAAI,CAACC,eAAe,GAAC,IAAI,CAACF,WAAW,CAACE,eAAe,EAAE;IAEvD,IAAI,CAACC,UAAU,GAAC,IAAIT,SAAS,CAAC;MAC5BU,KAAK,EAAE,IAAIX,WAAW,CAAC,EAAE;KAC1B,CAAC;IACF,IAAI,CAACU,UAAU,CAACE,GAAG,CAAC,OAAO,CAAC,EAAEC,YAAY,CAACC,SAAS,CACjDC,KAAK,IAAG;MACP,IAAIC,MAAM,GAAC,IAAIjB,UAAU,EAAE,CAACkB,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;MAC/C,IAAI,CAACT,UAAU,CAACM,GAAG,CAAgBV,SAAS,CAACgB,aAAa,GAAC,iBAAiB,EAAE;QAAEF;MAAM,CAAE,CAAC,CACxFF,SAAS,CAAC;QACTK,IAAI,EAAGC,KAAK,IAAG;UACb,IAAI,CAACC,YAAY,GAACD,KAAK;UACvBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;QACpB;OACD,CAAC;IAAA,CAAC,CAAC;EACV;;AAzBWhB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ5BzB,8BAAoB;MAE6DA,+BAAc;MAAAA,iBAAI;MAEnGA,sEAA6F;MAE7FA,sEAAwE;MAGxEA,iBAAM;;;MAPaA,eAAoB;MAApBA,uDAAoB;MAE9BA,eAAsB;MAAtBA,2CAAsB;MAEtBA,eAAqB;MAArBA,0CAAqB","names":["HttpParams","FormControl","FormGroup","URLGlobal","i0","NavbarComponent","constructor","httpClient","authService","ngOnInit","isAuthenticated","searchForm","title","get","valueChanges","subscribe","query","params","set","libraryAppURL","next","value","searchResult","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/galaktion/Desktop/LibraryAppFrontend/src/app/core/navbar/navbar.component.ts","/home/galaktion/Desktop/LibraryAppFrontend/src/app/core/navbar/navbar.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from 'src/app/authorization/AuthService';\nimport { BookApiResult } from 'src/app/functionality/ApiResult';\nimport { URLGlobal } from 'src/app/URLGlobal';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  \n  searchForm!: FormGroup\n  searchResult!: BookApiResult\n  isAuthenticated!: boolean\n\n  constructor(private httpClient: HttpClient, private authService:AuthService) {}\n  \n  ngOnInit(): void {\n\n    this.isAuthenticated=this.authService.isAuthenticated();\n\n    this.searchForm=new FormGroup({\n      title: new FormControl('')\n    });\n    this.searchForm.get(\"title\")?.valueChanges.subscribe(\n      (query)=>{\n        var params=new HttpParams().set(\"query\", query);\n        this.httpClient.get<BookApiResult>(URLGlobal.libraryAppURL+\"api/book/search\", { params })\n        .subscribe({\n          next: (value)=>{\n            this.searchResult=value;\n            console.log(value);\n          }\n        })});\n  }\n\n  \n}\n","<div class=\"navbar\">\n\n<h2 class=\"header\" [routerLink]=\"['/']\"><i class=\"fa-solid fa-book-open-reader\"> Dotnet Library</i></h2>\n\n<button *ngIf=\"!isAuthenticated\" class=\"loginbutton\" [routerLink]=\"['/login']\">Login</button>\n\n<button *ngIf=\"isAuthenticated\" [routerLink]=\"['/books']\">Books</button>\n\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}