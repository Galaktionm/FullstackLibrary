{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { URLGlobal } from 'src/app/URLGlobal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/authorization/AuthService\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction BookdetailsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"img\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5)(3, \"p\");\n    i0.ɵɵtext(4, \"Update image: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 6);\n    i0.ɵɵlistener(\"change\", function BookdetailsComponent_div_1_Template_input_change_5_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addImage($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.imagePath, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class BookdetailsComponent {\n  constructor(httpClient, authService, activatedRoute) {\n    this.httpClient = httpClient;\n    this.authService = authService;\n    this.activatedRoute = activatedRoute;\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.bookId = params[\"bookId\"];\n      this.httpClient.get(URLGlobal.libraryAppURL + \"api/book/\" + params[\"bookId\"]).subscribe({\n        next: result => {\n          console.log(result);\n          if (result.imagePath != null) {\n            this.imagePath = URLGlobal.libraryAppURL + \"api/operations/image/?imagePath=\" + result.imagePath;\n          }\n          this.book = result;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    });\n  }\n  addImage(event) {\n    var fileInputElement = event.target;\n    var image = fileInputElement.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    //var extension=image.name.split('.').pop();\n    var params = new HttpParams().append(\"bookId\", this.bookId);\n    this.httpClient.post(URLGlobal.libraryAppURL + \"api/operations/upload\", formData, {\n      params\n    }).subscribe({\n      next: result => {\n        console.log(result);\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n}\nBookdetailsComponent.ɵfac = function BookdetailsComponent_Factory(t) {\n  return new (t || BookdetailsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nBookdetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookdetailsComponent,\n  selectors: [[\"app-bookdetails\"]],\n  decls: 10,\n  vars: 4,\n  consts: [[1, \"bookdetailsgrid\"], [\"class\", \"bookvisual\", \"id\", \"bookvisual\", 4, \"ngIf\"], [1, \"bookinfo\"], [\"id\", \"bookvisual\", 1, \"bookvisual\"], [3, \"src\"], [1, \"imagebuttondiv\"], [\"type\", \"file\", \"value\", \"Update image\", 1, \"imagebutton\", 3, \"change\"]],\n  template: function BookdetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, BookdetailsComponent_div_1_Template, 6, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"h3\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.imagePath);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.book.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.book.description);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Author: \", ctx.book.author[0].name, \"\");\n    }\n  },\n  dependencies: [i4.NgIf],\n  styles: [\".bookdetailsgrid[_ngcontent-%COMP%] {\\n    display: grid;\\n    grid-template-columns: 1fr 5fr;\\n    grid-template-rows: 1fr;\\n    margin: 0.5em;\\n    padding: 0.1em;\\n}\\n\\n.bookvisual[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    margin: 0;\\n}\\n\\n.bookvisual[_ngcontent-%COMP%]    > img[_ngcontent-%COMP%] {\\n    display: block;\\n    object-fit: contain;\\n    flex: 1;\\n    max-width: 100%;\\n    max-height: 100%;\\n    margin: 0 0.3em;\\n    padding: 0.5em;\\n}\\n\\n.bookinfo[_ngcontent-%COMP%] {\\n    margin-left: 5em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZnVuY3Rpb25hbGl0eS9ib29rZGV0YWlscy9ib29rZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLE9BQU87SUFDUCxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiXG4uYm9va2RldGFpbHNncmlkIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDVmcjtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgICBtYXJnaW46IDAuNWVtO1xuICAgIHBhZGRpbmc6IDAuMWVtO1xufVxuXG4uYm9va3Zpc3VhbCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbjogMDtcbn1cblxuLmJvb2t2aXN1YWwgPiBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gICAgZmxleDogMTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICBtYXJnaW46IDAgMC4zZW07XG4gICAgcGFkZGluZzogMC41ZW07XG59XG5cbi5ib29raW5mbyB7XG4gICAgbWFyZ2luLWxlZnQ6IDVlbTtcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAI7D,SAASC,SAAS,QAAQ,mBAAmB;;;;;;;;;ICF1CC,8BAA+D;IAC5DA,yBAA4B;IAE5BA,8BAA4B;IACtBA,8BAAc;IAAAA,iBAAI;IACrBA,gCAAwF;IAArEA;MAAAA;MAAA;MAAA,OAAUA,sCAAgB;IAAA,EAAC;IAA9CA,iBAAwF;;;;IAJtFA,eAAsB;IAAtBA,wDAAsB;;;ADSjC,OAAM,MAAOC,oBAAoB;EAO/BC,YACUC,UAAqB,EACrBC,WAAuB,EACvBC,cAA8B;IAF9B,eAAU,GAAVF,UAAU;IACV,gBAAW,GAAXC,WAAW;IACX,mBAAc,GAAdC,cAAc;EAAmB;EAE3CC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,MAAM,CAACC,SAAS,CAAED,MAAc,IAAG;MACrD,IAAI,CAACE,MAAM,GAACF,MAAM,CAAC,QAAQ,CAAC;MAC5B,IAAI,CAACJ,UAAU,CAACO,GAAG,CAAcX,SAAS,CAACY,aAAa,GAAC,WAAW,GAACJ,MAAM,CAAC,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC;QAC/FI,IAAI,EAAGC,MAAM,IAAG;UACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;UACnB,IAAGA,MAAM,CAACG,SAAS,IAAE,IAAI,EAAC;YAC1B,IAAI,CAACA,SAAS,GAACjB,SAAS,CAACY,aAAa,GAAC,kCAAkC,GAACE,MAAM,CAACG,SAAS;;UAE1F,IAAI,CAACC,IAAI,GAACJ,MAAM;QAClB,CAAC;QACDK,KAAK,EAAGA,KAAK,IAAG;UACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;QACpB;OACD,CAAC;IAAA,CAAC,CAAC;EACR;EAEAC,QAAQ,CAACC,KAAY;IAEnB,IAAIC,gBAAgB,GAAmBD,KAAK,CAACE,MAAO;IACpD,IAAIC,KAAK,GAACF,gBAAgB,CAACG,KAAM,CAAC,CAAC,CAAC;IAEpC,MAAMC,QAAQ,GAAC,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAE/B;IAEA,IAAIhB,MAAM,GAAC,IAAIT,UAAU,EAAE,CAAC6B,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAClB,MAAM,CAAC;IAEzD,IAAI,CAACN,UAAU,CAACyB,IAAI,CAAC7B,SAAS,CAACY,aAAa,GAAC,uBAAuB,EAAEc,QAAQ,EAAE;MAAElB;IAAM,CAAE,CAAC,CAACC,SAAS,CAAC;MAClGI,IAAI,EAAGC,MAAM,IAAG;QACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACrB,CAAC;MACDK,KAAK,EAAGA,KAAK,IAAG;QACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MACpB;KACH,CAAC;EAEJ;;AAlDWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZjCjC,8BAA6B;MAE1BA,qEAOM;MAENA,8BAAsB;MACfA,YAAc;MAAAA,iBAAK;MACvBA,2BAAK;MACAA,YAAoB;MAAAA,iBAAI;MAE7BA,yBAAG;MAAAA,YAA+B;MAAAA,iBAAI;;;MAdnCA,eAAoB;MAApBA,oCAAoB;MAUnBA,eAAc;MAAdA,oCAAc;MAEbA,eAAoB;MAApBA,0CAAoB;MAEtBA,eAA+B;MAA/BA,8DAA+B","names":["HttpParams","URLGlobal","i0","BookdetailsComponent","constructor","httpClient","authService","activatedRoute","ngOnInit","params","subscribe","bookId","get","libraryAppURL","next","result","console","log","imagePath","book","error","addImage","event","fileInputElement","target","image","files","formData","FormData","append","post","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/galaktion/Desktop/LibraryAppFrontend/src/app/functionality/bookdetails/bookdetails.component.ts","/home/galaktion/Desktop/LibraryAppFrontend/src/app/functionality/bookdetails/bookdetails.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from 'src/app/authorization/AuthService';\nimport { URLGlobal } from 'src/app/URLGlobal';\nimport { BookDetails } from '../models';\n\n@Component({\n  selector: 'app-bookdetails',\n  templateUrl: './bookdetails.component.html',\n  styleUrls: ['./bookdetails.component.css']\n})\nexport class BookdetailsComponent implements OnInit {\n  \n  book!: BookDetails\n  bookId!: number\n  isAdmin!: boolean\n  imagePath!: string\n\n  constructor(\n    private httpClient:HttpClient, \n    private authService:AuthService,\n    private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: Params)=> {\n      this.bookId=params[\"bookId\"];\n      this.httpClient.get<BookDetails>(URLGlobal.libraryAppURL+\"api/book/\"+params[\"bookId\"]).subscribe({\n        next: (result)=>{\n          console.log(result);\n          if(result.imagePath!=null){\n          this.imagePath=URLGlobal.libraryAppURL+\"api/operations/image/?imagePath=\"+result.imagePath;\n          }\n          this.book=result;\n        },\n        error: (error)=>{\n          console.log(error);\n        }\n      })});\n  }\n\n  addImage(event: Event){\n\n    var fileInputElement=<HTMLInputElement>event.target!;\n    var image=fileInputElement.files![0];\n\n    const formData=new FormData();\n    formData.append(\"image\", image);\n    \n    //var extension=image.name.split('.').pop();\n    \n    var params=new HttpParams().append(\"bookId\", this.bookId);\n\n    this.httpClient.post(URLGlobal.libraryAppURL+\"api/operations/upload\", formData, { params }).subscribe({\n        next: (result)=>{\n          console.log(result)\n        },\n        error: (error)=>{\n          console.log(error)\n        }\n    })\n\n  }\n\n  \n\n}\n","<div class=\"bookdetailsgrid\">\n\n   <div *ngIf=\"this.imagePath\" class=\"bookvisual\" id=\"bookvisual\">\n      <img [src]=\"this.imagePath\">\n      \n      <div class=\"imagebuttondiv\">\n         <p>Update image: </p>\n         <input type=\"file\" (change)=\"addImage($event)\" value=\"Update image\" class=\"imagebutton\">\n      </div>\n   </div>\n\n   <div class=\"bookinfo\">\n      <h3>{{book.title}}</h3>\n      <div>\n        <p>{{book.description}}</p>\n      </div>\n      <p>Author: {{book.author[0].name}}</p>   \n   </div>\n</div>\n\n\n\n<!--\n    <div *ngFor=\"let review of book.reviews\">\n        <p>User: {{review.user}}</p>\n        <p>Rating: {{review.rating}}</p>\n        <p *ngIf=\"review.review\">Review: {{review.review}}</p>\n    </div>\n\n-->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}